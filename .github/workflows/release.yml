name: Universal Python Wheel Builder

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: ["3.10"]
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build tools
      run: python -m pip install build wheel

    - name: Build binaries
      run: python -m build --wheel --sdist

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ runner.os }}
        path: dist/*
        retention-days: 3

  create-release:
    name: Assemble Release Assets
    needs: [build-wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all platform artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: wheels-*
        merge-multiple: true

    - name: Upload Release Assets
      run: |
        for file in dist/*; do
          echo "Uploading $file"
          name="${file##*/}"
          gh release upload ${{ github.event.release.tag_name }} "$file" --repo $GITHUB_REPOSITORY
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
